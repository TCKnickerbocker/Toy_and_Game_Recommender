Prometheus Queries


1. Recommendation Generation Metrics
promqlCopy# Total recommendations generated per endpoint
sum(api_metrics_recommendations_generated_total{endpoint="/initial_products"})
sum(api_metrics_recommendations_generated_total{endpoint="/most_similar_products"})
# ^^NOTE: Can replace endpoint with any of the other models (1-4) i.e. endpoint="/recommend_products_sentiment_model"

# Recommendation generation rate per minute
rate(api_metrics_recommendations_generated_total{endpoint="/most_similar_products"}[5m])


2. Latency Metrics
promqlCopy# Recommendation Latency (90th Percentile)
histogram_quantile(0.90, rate(api_metrics_recommendation_latency_seconds_bucket{endpoint="/most_similar_products"}[5m]))

# Database Query Latency
histogram_quantile(0.90, rate(api_metrics_database_query_latency_seconds_bucket{endpoint="/initial_products", query_type="random_selection"}[5m]))

# External Model Call Latency
histogram_quantile(0.90, rate(api_metrics_external_model_call_latency_seconds_bucket[5m]))


3. Error Rate Metrics
promqlCopy# Total recommendation errors
sum(api_metrics_recommendation_errors_total{endpoint="/most_similar_products"})

# Error rate percentage
sum(api_metrics_recommendation_errors_total{endpoint="/most_similar_products"}) / 
sum(api_metrics_recommendations_generated_total{endpoint="/most_similar_products"}) * 100


4. Request Metrics
promqlCopy# Total requests by endpoint and status
sum(api_metrics_requests_total{endpoint="/most_similar_products", status="success"})
sum(api_metrics_requests_total{endpoint="/most_similar_products", status="error"})

EXTRA: Prometheus Process Metrics Queries (for port 9102/metrics - api metrics)
Virtual Memory Usage
# Virtual memory size in bytes
process_virtual_memory_bytes
Resident Memory Usage
promql
# Resident memory size in bytes
process_resident_memory_bytes
Process Start Time (in seconds)
promql
# Start time of the process (Unix epoch)
process_start_time_seconds
Total CPU Time
promql
# Total CPU time spent (user + system) in seconds
process_cpu_seconds_total
Number of Open File Descriptors
promql
# Number of open file descriptors
process_open_fds
Maximum Number of Open File Descriptors
promql
# Maximum number of open file descriptors
process_max_fds
